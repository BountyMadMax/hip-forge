package pages

import (
  "hip-forge/src/models"
	"hip-forge/src/views"
	"gorm.io/gorm"
)

templ Account(account models.Account, db *gorm.DB) {
  <li class="border-2 border-rose-900 rounded">
    <form class="flex flex-col" action="/accounts" method="post" hx-target="main" enctype="multipart/form-data">
      <div class="border-b-2 border-rose-900 py-2 px-16 relative">
        <h2 class="font-bold text-xl">
          <input
            type="text"
            placeholder="Name"
            required
            value={ account.Name }
            name="name"
            class="w-full border-b-2 border-rose-700 focus-visible:border-rose-500 focus:outline-0 text-center"
          />
        </h2>
        <button
          type="submit"
          class="absolute border-2 top-2 right-2 border-rose-700 hover:bg-rose-700 active:bg-rose-900 active:border-rose-900 focus-visible:outline-2 focus-visible:outline-offset-4 focus-visible:outline-rose-700 transition duration-75 px-2 rounded cursor-pointer flex items-center gap-1"
        >
          <i class="icon-save"></i>
        </button>
      </div>
      <div class="grid grid-rows-2 grid-cols-[min-content_auto] gap-2 p-2">
          <label for="token" class="text-nowrap">
            Auth-API-Token
          </label>
          <div class="ml-26">
            @AccountTokenInput(account.Token, true)
          </div>
          <label for="zone" class="text-nowrap">
            Zone
          </label>
          <div class="ml-26">
            @ZoneInput(views.ParseBoolWithoutError(account.Token))
          </div>
      </div>
      <div class="flex flex-col gap-2 p-2">
        <div class="flex justify-end">
          <button
            type="button"
            class="border-2 border-rose-700 hover:bg-rose-700 active:bg-rose-900 active:border-rose-900 focus-visible:outline-2 focus-visible:outline-offset-4 focus-visible:outline-rose-700 transition duration-75 px-2 rounded cursor-pointer flex items-center gap-1"
            hx-target="next .record-list"
            hx-post="/records"
            hx-swap="beforeend"
          >
            <i class="icon-plus"></i>
            <span>Domain</span>
          </button>
        </div>

        @RecordTable(account.UnhiddenRecords(db))
      </div>
      <div>
        <details>
          <summary>Hidden records</summary>
          @RecordHiddenTable(account.HiddenRecords(db))
        </details>
      </div>
    </form>
  </li>
}

templ AccountTokenInput(token string, hideToken bool) {
  <span class="flex gap-2">
    <div class="w-full">
      <input
        type={ views.IfElse(hideToken, "password", "text") }
        placeholder="Token"
        required
        name="token"
        id="token"
        value={ token }
        class="block w-125 border-b-2 border-rose-700 focus-visible:border-rose-500 focus:outline-0"
        hx-post="/accounts/token-changed"
        hx-trigger="input changed throttle:1s"
        hx-target="next .zone-select"
        hx-swap="outerHTML"
      />
      <input type="hidden" value={ hideToken } name="hidden-token"/>
    </div>

    <button
      type="button"
      hx-post="/accounts/toggle-token-input"
      hx-target="closest span"
      hx-include="[name='token'],[name='hidden-token']"
      hx-swap="outerHTML"
      class="border-2 border-rose-700 hover:bg-rose-700 active:bg-rose-900 active:border-rose-900 focus-visible:outline-2 focus-visible:outline-offset-4 focus-visible:outline-rose-700 transition duration-75 px-2 rounded cursor-pointer flex items-center gap-1"
    >
      if hideToken {
        <i class="icon-eye"></i>
      } else {
        <i class="icon-eye-off"></i>
      }
    </button>
  </span>
}
